

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Feb 07 14:25:55 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1719 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  008F                     	;# 
    82  0090                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  0110                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0113                     	;# 
   106  0114                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011C                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  018E                     	;# 
   119  018F                     	;# 
   120  0190                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0197                     	;# 
   130  0199                     	;# 
   131  0199                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019A                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019D                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019E                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  019F                     	;# 
   153  019F                     	;# 
   154  019F                     	;# 
   155  020C                     	;# 
   156  020D                     	;# 
   157  020E                     	;# 
   158  020F                     	;# 
   159  0210                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0216                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0217                     	;# 
   176  028C                     	;# 
   177  028D                     	;# 
   178  028E                     	;# 
   179  028F                     	;# 
   180  0290                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0293                     	;# 
   186  0298                     	;# 
   187  0298                     	;# 
   188  0299                     	;# 
   189  029A                     	;# 
   190  029A                     	;# 
   191  029E                     	;# 
   192  030C                     	;# 
   193  030D                     	;# 
   194  030E                     	;# 
   195  030F                     	;# 
   196  0310                     	;# 
   197  038C                     	;# 
   198  038D                     	;# 
   199  038E                     	;# 
   200  038F                     	;# 
   201  0390                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  0397                     	;# 
   209  0398                     	;# 
   210  0399                     	;# 
   211  039D                     	;# 
   212  039E                     	;# 
   213  039F                     	;# 
   214  0415                     	;# 
   215  0416                     	;# 
   216  0417                     	;# 
   217  041C                     	;# 
   218  041D                     	;# 
   219  041E                     	;# 
   220  0498                     	;# 
   221  0498                     	;# 
   222  0499                     	;# 
   223  049A                     	;# 
   224  049B                     	;# 
   225  049B                     	;# 
   226  049C                     	;# 
   227  049D                     	;# 
   228  049E                     	;# 
   229  049F                     	;# 
   230  0511                     	;# 
   231  0515                     	;# 
   232  0617                     	;# 
   233  0618                     	;# 
   234  0619                     	;# 
   235  0619                     	;# 
   236  061A                     	;# 
   237  061B                     	;# 
   238  061C                     	;# 
   239  061C                     	;# 
   240  0691                     	;# 
   241  0692                     	;# 
   242  0693                     	;# 
   243  0694                     	;# 
   244  0695                     	;# 
   245  0696                     	;# 
   246  0697                     	;# 
   247  0698                     	;# 
   248  0699                     	;# 
   249  069A                     	;# 
   250  069B                     	;# 
   251  069C                     	;# 
   252  069D                     	;# 
   253  069E                     	;# 
   254  069F                     	;# 
   255  0E0F                     	;# 
   256  0E10                     	;# 
   257  0E11                     	;# 
   258  0E12                     	;# 
   259  0E13                     	;# 
   260  0E14                     	;# 
   261  0E15                     	;# 
   262  0E17                     	;# 
   263  0E20                     	;# 
   264  0E21                     	;# 
   265  0E22                     	;# 
   266  0E24                     	;# 
   267  0E25                     	;# 
   268  0E28                     	;# 
   269  0E29                     	;# 
   270  0E2A                     	;# 
   271  0E2B                     	;# 
   272  0E90                     	;# 
   273  0E91                     	;# 
   274  0E92                     	;# 
   275  0E93                     	;# 
   276  0E94                     	;# 
   277  0E95                     	;# 
   278  0E96                     	;# 
   279  0E97                     	;# 
   280  0E98                     	;# 
   281  0E99                     	;# 
   282  0E9A                     	;# 
   283  0E9B                     	;# 
   284  0E9C                     	;# 
   285  0E9D                     	;# 
   286  0E9E                     	;# 
   287  0E9F                     	;# 
   288  0EA0                     	;# 
   289  0EA1                     	;# 
   290  0EA2                     	;# 
   291  0EA3                     	;# 
   292  0EA4                     	;# 
   293  0EA5                     	;# 
   294  0EA6                     	;# 
   295  0EA7                     	;# 
   296  0EA8                     	;# 
   297  0EA9                     	;# 
   298  0EAA                     	;# 
   299  0EAB                     	;# 
   300  0EAC                     	;# 
   301  0EAD                     	;# 
   302  0EAE                     	;# 
   303  0EAF                     	;# 
   304  0EB0                     	;# 
   305  0EB1                     	;# 
   306  0EB2                     	;# 
   307  0F0F                     	;# 
   308  0F10                     	;# 
   309  0F11                     	;# 
   310  0F12                     	;# 
   311  0F13                     	;# 
   312  0F14                     	;# 
   313  0F15                     	;# 
   314  0F16                     	;# 
   315  0F17                     	;# 
   316  0F18                     	;# 
   317  0F19                     	;# 
   318  0F1A                     	;# 
   319  0F1B                     	;# 
   320  0F1C                     	;# 
   321  0F1D                     	;# 
   322  0F1E                     	;# 
   323  0F1F                     	;# 
   324  0F20                     	;# 
   325  0F21                     	;# 
   326  0F22                     	;# 
   327  0F23                     	;# 
   328  0F24                     	;# 
   329  0F25                     	;# 
   330  0F26                     	;# 
   331  0F27                     	;# 
   332  0F28                     	;# 
   333  0F29                     	;# 
   334  0F2A                     	;# 
   335  0F2B                     	;# 
   336  0F2C                     	;# 
   337  0F2D                     	;# 
   338  0F2E                     	;# 
   339  0F2F                     	;# 
   340  0F30                     	;# 
   341  0F31                     	;# 
   342  0F32                     	;# 
   343  0F33                     	;# 
   344  0F34                     	;# 
   345  0F35                     	;# 
   346  0F36                     	;# 
   347  0F37                     	;# 
   348  0FE4                     	;# 
   349  0FE5                     	;# 
   350  0FE6                     	;# 
   351  0FE7                     	;# 
   352  0FE8                     	;# 
   353  0FE9                     	;# 
   354  0FEA                     	;# 
   355  0FEB                     	;# 
   356  0FED                     	;# 
   357  0FEE                     	;# 
   358  0FEF                     	;# 
   359  000B                     _INTCON	set	11
   360  001C                     _T2CON	set	28
   361  001B                     _PR2	set	27
   362  0011                     _PIR1bits	set	17
   363  0091                     _PIE1	set	145
   364  008D                     _TRISB	set	141
   365  008F                     _TRISD	set	143
   366  008C                     _TRISAbits	set	140
   367  010D                     _LATB	set	269
   368  010F                     _LATD	set	271
   369  018C                     _ANSELAbits	set	396
   370  061C                     _PWM4CON	set	1564
   371  061A                     _PWM4DCL	set	1562
   372  061B                     _PWM4DCH	set	1563
   373  0E9B                     _RB3PPS	set	3739
   374  0E9A                     _RB2PPS	set	3738
   375  0E99                     _RB1PPS	set	3737
   376  0E98                     _RB0PPS	set	3736
   377  0EAB                     _RD3PPS	set	3755
   378  0EAA                     _RD2PPS	set	3754
   379  0EA9                     _RD1PPS	set	3753
   380  0EA8                     _RD0PPS	set	3752
   381  0E90                     _RA0PPS	set	3728
   382                           
   383                           	psect	cinit
   384  00B6                     start_initialization:	
   385                           ; #config settings
   386                           
   387  00B6                     __initialization:
   388                           
   389                           ; Clear objects allocated to COMMON
   390  00B6  01F0               	clrf	__pbssCOMMON& (0+127)
   391  00B7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   392  00B8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   393  00B9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   394  00BA                     end_of_initialization:	
   395                           ;End of C runtime variable initialization code
   396                           
   397  00BA                     __end_of__initialization:
   398  00BA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   399  00BB  0020               	movlb	0
   400  00BC  3181  2916         	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	bssCOMMON
   403  0070                     __pbssCOMMON:
   404  0070                     _j:
   405  0070                     	ds	2
   406  0072                     _time_ms:
   407  0072                     	ds	2
   408                           
   409                           	psect	cstackCOMMON
   410  0074                     __pcstackCOMMON:
   411  0074                     ?_fsm_pwm:
   412  0074                     ?_toto:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0074                     ?_main:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0074                     fsm_pwm@i:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 2 bytes @ 0x0
   423  0074                     	ds	2
   424  0076                     ??_fsm_pwm:
   425  0076                     ??_toto:	
   426                           ; 1 bytes @ 0x2
   427                           
   428                           
   429                           ; 1 bytes @ 0x2
   430  0076                     	ds	1
   431  0077                     ??_main:
   432                           
   433                           ; 1 bytes @ 0x3
   434  0077                     	ds	1
   435                           
   436                           	psect	maintext
   437  0116                     __pmaintext:	
   438 ;;
   439 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   440 ;;
   441 ;; *************** function _main *****************
   442 ;; Defined at:
   443 ;;		line 133 in file "template.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0
   452 ;; Tracked objects:
   453 ;;		On entry : B1F/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   461 ;;Total ram usage:        1 bytes
   462 ;; Hardware stack levels required when called: 2
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470  0116                     _main:	
   471                           ;psect for function _main
   472                           
   473  0116                     l750:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg+status,2+status,0]
   476                           
   477                           
   478                           ;template.c: 135:     TRISAbits.TRISA5 = 1;
   479  0116  0021               	movlb	1	; select bank1
   480  0117  168C               	bsf	12,5	;volatile
   481                           
   482                           ;template.c: 136:     ANSELAbits.ANSA5 = 0;
   483  0118  0023               	movlb	3	; select bank3
   484  0119  128C               	bcf	12,5	;volatile
   485  011A                     l752:
   486                           
   487                           ;template.c: 138:     TRISD &= 0xF0;
   488  011A  30F0               	movlw	240
   489  011B  00F7               	movwf	??_main
   490  011C  0877               	movf	??_main,w
   491  011D  0021               	movlb	1	; select bank1
   492  011E  058F               	andwf	15,f	;volatile
   493                           
   494                           ;template.c: 139:     TRISB &= 0xF0;
   495  011F  30F0               	movlw	240
   496  0120  00F7               	movwf	??_main
   497  0121  0877               	movf	??_main,w
   498  0122  058D               	andwf	13,f	;volatile
   499  0123                     l754:
   500                           
   501                           ;template.c: 141:     PR2 = 124;
   502  0123  307C               	movlw	124
   503  0124  0020               	movlb	0	; select bank0
   504  0125  009B               	movwf	27	;volatile
   505  0126                     l756:
   506                           
   507                           ;template.c: 142:     T2CON |= 0x04;
   508  0126  151C               	bsf	28,2	;volatile
   509  0127                     l758:
   510                           
   511                           ;template.c: 143:     T2CON |= 0x02;
   512  0127  149C               	bsf	28,1	;volatile
   513  0128                     l760:
   514                           
   515                           ;template.c: 144:     T2CON &= ~0x78;
   516  0128  3087               	movlw	135
   517  0129  00F7               	movwf	??_main
   518  012A  0877               	movf	??_main,w
   519  012B  059C               	andwf	28,f	;volatile
   520  012C                     l762:
   521                           
   522                           ;template.c: 146:     INTCON |= 0x80;
   523  012C  178B               	bsf	11,7	;volatile
   524  012D                     l764:
   525                           
   526                           ;template.c: 147:     INTCON |= 0x40;
   527  012D  170B               	bsf	11,6	;volatile
   528  012E                     l766:
   529                           
   530                           ;template.c: 148:     PIE1 |= 0x02;
   531  012E  0021               	movlb	1	; select bank1
   532  012F  1491               	bsf	17,1	;volatile
   533  0130                     l768:
   534                           
   535                           ;template.c: 150:     LATD = 0;
   536  0130  0022               	movlb	2	; select bank2
   537  0131  018F               	clrf	15	;volatile
   538  0132                     l770:
   539                           
   540                           ;template.c: 151:     LATB = 0;
   541  0132  018D               	clrf	13	;volatile
   542                           
   543                           ;template.c: 153:     PWM4CON = 0x80;
   544  0133  3080               	movlw	128
   545  0134  002C               	movlb	12	; select bank12
   546  0135  009C               	movwf	28	;volatile
   547                           
   548                           ;template.c: 155:     RD0PPS = 0x0F;
   549  0136  300F               	movlw	15
   550  0137  003D               	movlb	29	; select bank29
   551  0138  00A8               	movwf	40	;volatile
   552                           
   553                           ;template.c: 156:     RD1PPS = 0x0F;
   554  0139  300F               	movlw	15
   555  013A  00A9               	movwf	41	;volatile
   556                           
   557                           ;template.c: 157:     RD2PPS = 0x0F;
   558  013B  300F               	movlw	15
   559  013C  00AA               	movwf	42	;volatile
   560                           
   561                           ;template.c: 158:     RD3PPS = 0x0F;
   562  013D  300F               	movlw	15
   563  013E  00AB               	movwf	43	;volatile
   564                           
   565                           ;template.c: 159:     RB0PPS = 0x0F;
   566  013F  300F               	movlw	15
   567  0140  0098               	movwf	24	;volatile
   568                           
   569                           ;template.c: 160:     RB1PPS = 0x0F;
   570  0141  300F               	movlw	15
   571  0142  0099               	movwf	25	;volatile
   572                           
   573                           ;template.c: 161:     RB2PPS = 0x0F;
   574  0143  300F               	movlw	15
   575  0144  009A               	movwf	26	;volatile
   576                           
   577                           ;template.c: 162:     RB3PPS = 0x0F;
   578  0145  300F               	movlw	15
   579  0146  009B               	movwf	27	;volatile
   580  0147                     l99:	
   581                           ;template.c: 164:     while(1){}
   582                           
   583  0147                     l100:
   584  0147  2947               	goto	l99
   585  0148  3180  28B4         	ljmp	start
   586  014A                     __end_of_main:
   587                           
   588                           	psect	intentry
   589  0004                     __pintentry:	
   590 ;; *************** function _toto *****************
   591 ;; Defined at:
   592 ;;		line 50 in file "template.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   610 ;;Total ram usage:        1 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; Hardware stack levels required when called: 1
   613 ;; This function calls:
   614 ;;		_fsm_pwm
   615 ;; This function is called by:
   616 ;;		Interrupt level 1
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620  0004                     _toto:
   621                           
   622                           ;incstack = 0
   623  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   624                           
   625                           ; Regs used in _toto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   626  0005  3180               	pagesel	$
   627  0006                     i1l860:
   628                           
   629                           ;template.c: 51:     PIR1bits.TMR2IF = 0;
   630  0006  0020               	movlb	0	; select bank0
   631  0007  1091               	bcf	17,1	;volatile
   632  0008                     i1l862:
   633                           
   634                           ;template.c: 53:     if(time_ms == 124){
   635  0008  307C               	movlw	124
   636  0009  0672               	xorwf	_time_ms,w
   637  000A  0473               	iorwf	_time_ms+1,w
   638  000B  1D03               	btfss	3,2
   639  000C  280E               	goto	u3_21
   640  000D  280F               	goto	u3_20
   641  000E                     u3_21:
   642  000E  28AE               	goto	i1l942
   643  000F                     u3_20:
   644  000F                     i1l864:
   645                           
   646                           ;template.c: 54:         time_ms = 0;
   647  000F  01F2               	clrf	_time_ms
   648  0010  01F3               	clrf	_time_ms+1
   649  0011                     i1l866:
   650                           
   651                           ;template.c: 55:         if(j > 7) {
   652  0011  0871               	movf	_j+1,w
   653  0012  3A80               	xorlw	128
   654  0013  00F6               	movwf	??_toto
   655  0014  3080               	movlw	128
   656  0015  0276               	subwf	??_toto,w
   657  0016  1D03               	skipz
   658  0017  281A               	goto	u4_25
   659  0018  3008               	movlw	8
   660  0019  0270               	subwf	_j,w
   661  001A                     u4_25:
   662  001A  1C03               	skipc
   663  001B  281D               	goto	u4_21
   664  001C  281E               	goto	u4_20
   665  001D                     u4_21:
   666  001D  288F               	goto	i1l940
   667  001E                     u4_20:
   668  001E  2864               	goto	i1l904
   669  001F                     i1l870:
   670                           
   671                           ;template.c: 58:                 fsm_pwm(6);
   672  001F  3006               	movlw	6
   673  0020  00F4               	movwf	fsm_pwm@i
   674  0021  3000               	movlw	0
   675  0022  00F5               	movwf	fsm_pwm@i+1
   676  0023  3180  20BE  3180   	fcall	_fsm_pwm
   677  0026                     i1l872:
   678                           
   679                           ;template.c: 59:                 j++;
   680  0026  3001               	movlw	1
   681  0027  07F0               	addwf	_j,f
   682  0028  3000               	movlw	0
   683  0029  3DF1               	addwfc	_j+1,f
   684                           
   685                           ;template.c: 60:                 break;
   686  002A  288F               	goto	i1l940
   687  002B                     i1l874:
   688                           
   689                           ;template.c: 62:                 fsm_pwm(5);
   690  002B  3005               	movlw	5
   691  002C  00F4               	movwf	fsm_pwm@i
   692  002D  3000               	movlw	0
   693  002E  00F5               	movwf	fsm_pwm@i+1
   694  002F  3180  20BE  3180   	fcall	_fsm_pwm
   695  0032  2826               	goto	i1l872
   696  0033                     i1l878:
   697                           
   698                           ;template.c: 66:                 fsm_pwm(4);
   699  0033  3004               	movlw	4
   700  0034  00F4               	movwf	fsm_pwm@i
   701  0035  3000               	movlw	0
   702  0036  00F5               	movwf	fsm_pwm@i+1
   703  0037  3180  20BE  3180   	fcall	_fsm_pwm
   704  003A  2826               	goto	i1l872
   705  003B                     i1l882:
   706                           
   707                           ;template.c: 70:                 fsm_pwm(3);
   708  003B  3003               	movlw	3
   709  003C  00F4               	movwf	fsm_pwm@i
   710  003D  3000               	movlw	0
   711  003E  00F5               	movwf	fsm_pwm@i+1
   712  003F  3180  20BE  3180   	fcall	_fsm_pwm
   713  0042  2826               	goto	i1l872
   714  0043                     i1l886:
   715                           
   716                           ;template.c: 74:                 fsm_pwm(2);
   717  0043  3002               	movlw	2
   718  0044  00F4               	movwf	fsm_pwm@i
   719  0045  3000               	movlw	0
   720  0046  00F5               	movwf	fsm_pwm@i+1
   721  0047  3180  20BE  3180   	fcall	_fsm_pwm
   722  004A  2826               	goto	i1l872
   723  004B                     i1l890:
   724                           
   725                           ;template.c: 78:                 fsm_pwm(1);
   726  004B  3001               	movlw	1
   727  004C  00F4               	movwf	fsm_pwm@i
   728  004D  3000               	movlw	0
   729  004E  00F5               	movwf	fsm_pwm@i+1
   730  004F  3180  20BE  3180   	fcall	_fsm_pwm
   731  0052  2826               	goto	i1l872
   732  0053                     i1l894:
   733                           
   734                           ;template.c: 82:                 fsm_pwm(0);
   735  0053  3000               	movlw	0
   736  0054  00F4               	movwf	fsm_pwm@i
   737  0055  00F5               	movwf	fsm_pwm@i+1
   738  0056  3180  20BE  3180   	fcall	_fsm_pwm
   739  0059  2826               	goto	i1l872
   740  005A                     i1l898:
   741                           
   742                           ;template.c: 86:                 fsm_pwm(8);
   743  005A  3008               	movlw	8
   744  005B  00F4               	movwf	fsm_pwm@i
   745  005C  3000               	movlw	0
   746  005D  00F5               	movwf	fsm_pwm@i+1
   747  005E  3180  20BE  3180   	fcall	_fsm_pwm
   748  0061                     i1l900:
   749                           
   750                           ;template.c: 87:                 j = 0;
   751  0061  01F0               	clrf	_j
   752  0062  01F1               	clrf	_j+1
   753                           
   754                           ;template.c: 88:                 break;
   755  0063  288F               	goto	i1l940
   756  0064                     i1l904:
   757                           
   758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   759                           ; Switch size 1, requested type "simple"
   760                           ; Number of cases is 1, Range of values is 0 to 0
   761                           ; switch strategies available:
   762                           ; Name         Instructions Cycles
   763                           ; simple_byte            4     3 (average)
   764                           ; direct_byte            8     6 (fixed)
   765                           ; jumptable            260     6 (fixed)
   766                           ;	Chosen strategy is simple_byte
   767  0064  0871               	movf	_j+1,w
   768  0065  3A00               	xorlw	0	; case 0
   769  0066  1903               	skipnz
   770  0067  2869               	goto	i1l1012
   771  0068  288F               	goto	i1l940
   772  0069                     i1l1012:
   773                           
   774                           ; Switch size 1, requested type "simple"
   775                           ; Number of cases is 8, Range of values is 8 to 15
   776                           ; switch strategies available:
   777                           ; Name         Instructions Cycles
   778                           ; direct_byte           25     9 (fixed)
   779                           ; simple_byte           25    13 (average)
   780                           ; jumptable            263     9 (fixed)
   781                           ;	Chosen strategy is simple_byte
   782  0069  0870               	movf	_j,w
   783  006A  3A08               	xorlw	8	; case 8
   784  006B  1903               	skipnz
   785  006C  281F               	goto	i1l870
   786  006D  3A01               	xorlw	1	; case 9
   787  006E  1903               	skipnz
   788  006F  282B               	goto	i1l874
   789  0070  3A03               	xorlw	3	; case 10
   790  0071  1903               	skipnz
   791  0072  2833               	goto	i1l878
   792  0073  3A01               	xorlw	1	; case 11
   793  0074  1903               	skipnz
   794  0075  283B               	goto	i1l882
   795  0076  3A07               	xorlw	7	; case 12
   796  0077  1903               	skipnz
   797  0078  2843               	goto	i1l886
   798  0079  3A01               	xorlw	1	; case 13
   799  007A  1903               	skipnz
   800  007B  284B               	goto	i1l890
   801  007C  3A03               	xorlw	3	; case 14
   802  007D  1903               	skipnz
   803  007E  2853               	goto	i1l894
   804  007F  3A01               	xorlw	1	; case 15
   805  0080  1903               	skipnz
   806  0081  285A               	goto	i1l898
   807  0082  288F               	goto	i1l940
   808  0083                     i1l906:
   809                           
   810                           ;template.c: 93:                 fsm_pwm(j);
   811  0083  0871               	movf	_j+1,w
   812  0084  00F5               	movwf	fsm_pwm@i+1
   813  0085  0870               	movf	_j,w
   814  0086  00F4               	movwf	fsm_pwm@i
   815  0087  3180  20BE  3180   	fcall	_fsm_pwm
   816  008A                     i1l908:
   817                           
   818                           ;template.c: 94:                 j++;
   819  008A  3001               	movlw	1
   820  008B  07F0               	addwf	_j,f
   821  008C  3000               	movlw	0
   822  008D  3DF1               	addwfc	_j+1,f
   823                           
   824                           ;template.c: 95:                 break;
   825  008E  28AE               	goto	i1l942
   826  008F                     i1l940:
   827                           
   828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   829                           ; Switch size 1, requested type "simple"
   830                           ; Number of cases is 1, Range of values is 0 to 0
   831                           ; switch strategies available:
   832                           ; Name         Instructions Cycles
   833                           ; simple_byte            4     3 (average)
   834                           ; direct_byte            8     6 (fixed)
   835                           ; jumptable            260     6 (fixed)
   836                           ;	Chosen strategy is simple_byte
   837  008F  0871               	movf	_j+1,w
   838  0090  3A00               	xorlw	0	; case 0
   839  0091  1903               	skipnz
   840  0092  2894               	goto	i1l1014
   841  0093  28AE               	goto	i1l942
   842  0094                     i1l1014:
   843                           
   844                           ; Switch size 1, requested type "simple"
   845                           ; Number of cases is 8, Range of values is 0 to 7
   846                           ; switch strategies available:
   847                           ; Name         Instructions Cycles
   848                           ; direct_byte           22     6 (fixed)
   849                           ; simple_byte           25    13 (average)
   850                           ; jumptable            260     6 (fixed)
   851                           ;	Chosen strategy is simple_byte
   852  0094  0870               	movf	_j,w
   853  0095  3A00               	xorlw	0	; case 0
   854  0096  1903               	skipnz
   855  0097  2883               	goto	i1l906
   856  0098  3A01               	xorlw	1	; case 1
   857  0099  1903               	skipnz
   858  009A  2883               	goto	i1l906
   859  009B  3A03               	xorlw	3	; case 2
   860  009C  1903               	skipnz
   861  009D  2883               	goto	i1l906
   862  009E  3A01               	xorlw	1	; case 3
   863  009F  1903               	skipnz
   864  00A0  2883               	goto	i1l906
   865  00A1  3A07               	xorlw	7	; case 4
   866  00A2  1903               	skipnz
   867  00A3  2883               	goto	i1l906
   868  00A4  3A01               	xorlw	1	; case 5
   869  00A5  1903               	skipnz
   870  00A6  2883               	goto	i1l906
   871  00A7  3A03               	xorlw	3	; case 6
   872  00A8  1903               	skipnz
   873  00A9  2883               	goto	i1l906
   874  00AA  3A01               	xorlw	1	; case 7
   875  00AB  1903               	skipnz
   876  00AC  2883               	goto	i1l906
   877  00AD  28AE               	goto	i1l942
   878  00AE                     i1l942:
   879                           
   880                           ;template.c: 126:     time_ms++;
   881  00AE  3001               	movlw	1
   882  00AF  07F2               	addwf	_time_ms,f
   883  00B0  3000               	movlw	0
   884  00B1  3DF3               	addwfc	_time_ms+1,f
   885  00B2                     i1l91:
   886  00B2  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   887  00B3  0009               	retfie
   888  00B4                     __end_of_toto:
   889                           
   890                           	psect	text2
   891  00BE                     __ptext2:	
   892 ;; *************** function _fsm_pwm *****************
   893 ;; Defined at:
   894 ;;		line 9 in file "template.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  i               2    0[COMMON] int 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   912 ;;Total ram usage:        2 bytes
   913 ;; Hardware stack levels used: 1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_toto
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921  00BE                     _fsm_pwm:	
   922                           ;psect for function _fsm_pwm
   923                           
   924  00BE                     i1l832:	
   925                           ;incstack = 0
   926                           ; Regs used in _fsm_pwm: [wreg-fsr0h+status,2+status,0]
   927                           
   928                           
   929                           ;template.c: 10:     switch (i) {
   930  00BE  28F3               	goto	i1l854
   931  00BF                     i1l834:
   932                           
   933                           ;template.c: 12:             PWM4DCH = 15;
   934  00BF  300F               	movlw	15
   935  00C0  002C               	movlb	12	; select bank12
   936  00C1  009B               	movwf	27	;volatile
   937                           
   938                           ;template.c: 13:             PWM4DCL = 64;
   939  00C2  3040               	movlw	64
   940  00C3  009A               	movwf	26	;volatile
   941                           
   942                           ;template.c: 14:             break;
   943  00C4  2915               	goto	i1l64
   944  00C5                     i1l836:
   945                           
   946                           ;template.c: 16:             PWM4DCH = 31;
   947  00C5  301F               	movlw	31
   948  00C6  002C               	movlb	12	; select bank12
   949  00C7  009B               	movwf	27	;volatile
   950                           
   951                           ;template.c: 17:             PWM4DCL = 64;
   952  00C8  3040               	movlw	64
   953  00C9  009A               	movwf	26	;volatile
   954                           
   955                           ;template.c: 18:             break;
   956  00CA  2915               	goto	i1l64
   957  00CB                     i1l838:
   958                           
   959                           ;template.c: 20:             PWM4DCH = 47;
   960  00CB  302F               	movlw	47
   961  00CC  002C               	movlb	12	; select bank12
   962  00CD  009B               	movwf	27	;volatile
   963                           
   964                           ;template.c: 21:             PWM4DCL = 64;
   965  00CE  3040               	movlw	64
   966  00CF  009A               	movwf	26	;volatile
   967                           
   968                           ;template.c: 22:             break;
   969  00D0  2915               	goto	i1l64
   970  00D1                     i1l840:
   971                           
   972                           ;template.c: 24:             PWM4DCH = 63;
   973  00D1  303F               	movlw	63
   974  00D2  002C               	movlb	12	; select bank12
   975  00D3  009B               	movwf	27	;volatile
   976                           
   977                           ;template.c: 25:             PWM4DCL = 64;
   978  00D4  3040               	movlw	64
   979  00D5  009A               	movwf	26	;volatile
   980                           
   981                           ;template.c: 26:             break;
   982  00D6  2915               	goto	i1l64
   983  00D7                     i1l842:
   984                           
   985                           ;template.c: 28:             PWM4DCH = 79;
   986  00D7  304F               	movlw	79
   987  00D8  002C               	movlb	12	; select bank12
   988  00D9  009B               	movwf	27	;volatile
   989                           
   990                           ;template.c: 29:             PWM4DCL = 64;
   991  00DA  3040               	movlw	64
   992  00DB  009A               	movwf	26	;volatile
   993                           
   994                           ;template.c: 30:             break;
   995  00DC  2915               	goto	i1l64
   996  00DD                     i1l844:
   997                           
   998                           ;template.c: 32:             PWM4DCH = 95;
   999  00DD  305F               	movlw	95
  1000  00DE  002C               	movlb	12	; select bank12
  1001  00DF  009B               	movwf	27	;volatile
  1002                           
  1003                           ;template.c: 33:             PWM4DCL = 64;
  1004  00E0  3040               	movlw	64
  1005  00E1  009A               	movwf	26	;volatile
  1006                           
  1007                           ;template.c: 34:             break;
  1008  00E2  2915               	goto	i1l64
  1009  00E3                     i1l846:
  1010                           
  1011                           ;template.c: 36:             PWM4DCH = 111;
  1012  00E3  306F               	movlw	111
  1013  00E4  002C               	movlb	12	; select bank12
  1014  00E5  009B               	movwf	27	;volatile
  1015                           
  1016                           ;template.c: 37:             PWM4DCL = 64;
  1017  00E6  3040               	movlw	64
  1018  00E7  009A               	movwf	26	;volatile
  1019                           
  1020                           ;template.c: 38:             break;
  1021  00E8  2915               	goto	i1l64
  1022  00E9                     i1l848:
  1023                           
  1024                           ;template.c: 40:             PWM4DCH = 127;
  1025  00E9  307F               	movlw	127
  1026  00EA  002C               	movlb	12	; select bank12
  1027  00EB  009B               	movwf	27	;volatile
  1028                           
  1029                           ;template.c: 41:             PWM4DCL = 64;
  1030  00EC  3040               	movlw	64
  1031  00ED  009A               	movwf	26	;volatile
  1032                           
  1033                           ;template.c: 42:             break;
  1034  00EE  2915               	goto	i1l64
  1035  00EF                     i1l850:
  1036                           
  1037                           ;template.c: 44:             PWM4DCH = 0;
  1038  00EF  002C               	movlb	12	; select bank12
  1039  00F0  019B               	clrf	27	;volatile
  1040                           
  1041                           ;template.c: 45:             PWM4DCL = 0;
  1042  00F1  019A               	clrf	26	;volatile
  1043                           
  1044                           ;template.c: 46:             break;
  1045  00F2  2915               	goto	i1l64
  1046  00F3                     i1l854:
  1047                           
  1048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1049                           ; Switch size 1, requested type "simple"
  1050                           ; Number of cases is 1, Range of values is 0 to 0
  1051                           ; switch strategies available:
  1052                           ; Name         Instructions Cycles
  1053                           ; simple_byte            4     3 (average)
  1054                           ; direct_byte            8     6 (fixed)
  1055                           ; jumptable            260     6 (fixed)
  1056                           ;	Chosen strategy is simple_byte
  1057  00F3  0875               	movf	fsm_pwm@i+1,w
  1058  00F4  3A00               	xorlw	0	; case 0
  1059  00F5  1903               	skipnz
  1060  00F6  28F8               	goto	i1l1016
  1061  00F7  2915               	goto	i1l64
  1062  00F8                     i1l1016:
  1063                           
  1064                           ; Switch size 1, requested type "simple"
  1065                           ; Number of cases is 9, Range of values is 0 to 8
  1066                           ; switch strategies available:
  1067                           ; Name         Instructions Cycles
  1068                           ; direct_byte           24     6 (fixed)
  1069                           ; simple_byte           28    15 (average)
  1070                           ; jumptable            260     6 (fixed)
  1071                           ;	Chosen strategy is simple_byte
  1072  00F8  0874               	movf	fsm_pwm@i,w
  1073  00F9  3A00               	xorlw	0	; case 0
  1074  00FA  1903               	skipnz
  1075  00FB  28BF               	goto	i1l834
  1076  00FC  3A01               	xorlw	1	; case 1
  1077  00FD  1903               	skipnz
  1078  00FE  28C5               	goto	i1l836
  1079  00FF  3A03               	xorlw	3	; case 2
  1080  0100  1903               	skipnz
  1081  0101  28CB               	goto	i1l838
  1082  0102  3A01               	xorlw	1	; case 3
  1083  0103  1903               	skipnz
  1084  0104  28D1               	goto	i1l840
  1085  0105  3A07               	xorlw	7	; case 4
  1086  0106  1903               	skipnz
  1087  0107  28D7               	goto	i1l842
  1088  0108  3A01               	xorlw	1	; case 5
  1089  0109  1903               	skipnz
  1090  010A  28DD               	goto	i1l844
  1091  010B  3A03               	xorlw	3	; case 6
  1092  010C  1903               	skipnz
  1093  010D  28E3               	goto	i1l846
  1094  010E  3A01               	xorlw	1	; case 7
  1095  010F  1903               	skipnz
  1096  0110  28E9               	goto	i1l848
  1097  0111  3A0F               	xorlw	15	; case 8
  1098  0112  1903               	skipnz
  1099  0113  28EF               	goto	i1l850
  1100  0114  2915               	goto	i1l64
  1101  0115                     i1l64:
  1102  0115  0008               	return
  1103  0116                     __end_of_fsm_pwm:
  1104  007E                     btemp	set	126	;btemp
  1105  007E                     int$flags	set	126
  1106  007E                     wtemp0	set	126
  1107                           
  1108                           	psect	idloc
  1109                           
  1110                           ;Config register IDLOC0 @ 0x8000
  1111                           ;	unspecified, using default values
  1112  8000                     	org	32768
  1113  8000  3FFF               	dw	16383
  1114                           
  1115                           ;Config register IDLOC1 @ 0x8001
  1116                           ;	unspecified, using default values
  1117  8001                     	org	32769
  1118  8001  3FFF               	dw	16383
  1119                           
  1120                           ;Config register IDLOC2 @ 0x8002
  1121                           ;	unspecified, using default values
  1122  8002                     	org	32770
  1123  8002  3FFF               	dw	16383
  1124                           
  1125                           ;Config register IDLOC3 @ 0x8003
  1126                           ;	unspecified, using default values
  1127  8003                     	org	32771
  1128  8003  3FFF               	dw	16383
  1129                           
  1130                           	psect	config
  1131                           
  1132                           ;Config register CONFIG1 @ 0x8007
  1133                           ;	Oscillator Selection Bits
  1134                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  1135                           ;	Watchdog Timer Enable
  1136                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  1137                           ;	Power-up Timer Enable
  1138                           ;	PWRTE = OFF, PWRT disabled
  1139                           ;	MCLR Pin Function Select
  1140                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1141                           ;	Flash Program Memory Code Protection
  1142                           ;	CP = OFF, Program memory code protection is disabled
  1143                           ;	Brown-out Reset Enable
  1144                           ;	BOREN = ON, Brown-out Reset enabled
  1145                           ;	Clock Out Enable
  1146                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1147                           ;	Internal/External Switchover Mode
  1148                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  1149                           ;	Fail-Safe Clock Monitor Enable
  1150                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1151  8007                     	org	32775
  1152  8007  3FEA               	dw	16362
  1153                           
  1154                           ;Config register CONFIG2 @ 0x8008
  1155                           ;	Flash Memory Self-Write Protection
  1156                           ;	WRT = OFF, Write protection off
  1157                           ;	Peripheral Pin Select one-way control
  1158                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  1159                           ;	Zero-cross detect disable
  1160                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR and can be enabled with ZCDS
      +                          EN bit.
  1161                           ;	Phase Lock Loop enable
  1162                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  1163                           ;	Stack Overflow/Underflow Reset Enable
  1164                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1165                           ;	Brown-out Reset Voltage Selection
  1166                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1167                           ;	Low-Power Brown Out Reset
  1168                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1169                           ;	Low-Voltage Programming Enable
  1170                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1171  8008                     	org	32776
  1172  8008  1EFB               	dw	7931

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _toto in COMMON

    _toto->_fsm_pwm

Critical Paths under _main in BANK0

    None.

Critical Paths under _toto in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _toto in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _toto in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _toto in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _toto in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _toto in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _toto in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _toto in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _toto in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _toto in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _toto in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _toto in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _toto in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _toto in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _toto in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _toto in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _toto in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _toto in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _toto in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _toto in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _toto in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _toto in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _toto in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _toto in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _toto in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _toto in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _toto                                                 1     1      0    1238
                                              2 COMMON     1     1      0
                            _fsm_pwm
 ---------------------------------------------------------------------------------
 (2) _fsm_pwm                                              2     0      2    1238
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _toto (ROOT)
   _fsm_pwm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0       8      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0       8      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Feb 07 14:25:55 2023

                      _j 0070                       l99 0147                      l100 0147  
                    l750 0116                      l760 0128                      l752 011A  
                    l770 0132                      l762 012C                      l754 0123  
                    l764 012D                      l756 0126                      l766 012E  
                    l758 0127                      l768 0130                      _PR2 001B  
                   _LATB 010D                     _LATD 010F                     _PIE1 0091  
                   i1l64 0115                     i1l91 00B2                     u3_20 000F  
                   u3_21 000E                     u4_20 001E                     u4_21 001D  
                   u4_25 001A                     _main 0116                     btemp 007E  
                   _toto 0004                     start 00B4                    ?_main 0074  
                  ?_toto 0074                    _T2CON 001C                    i1l900 0061  
                  i1l840 00D1                    i1l832 00BE                    i1l904 0064  
                  i1l850 00EF                    i1l842 00D7                    i1l834 00BF  
                  i1l906 0083                    i1l844 00DD                    i1l836 00C5  
                  i1l908 008A                    i1l940 008F                    i1l860 0006  
                  i1l846 00E3                    i1l838 00CB                    i1l854 00F3  
                  i1l870 001F                    i1l942 00AE                    i1l862 0008  
                  i1l848 00E9                    i1l872 0026                    i1l864 000F  
                  i1l890 004B                    i1l882 003B                    i1l874 002B  
                  i1l866 0011                    i1l894 0053                    i1l886 0043  
                  i1l878 0033                    i1l898 005A                    _TRISB 008D  
                  _TRISD 008F          __end_of_fsm_pwm 0116                    status 0003  
                  wtemp0 007E          __initialization 00B6             __end_of_main 014A  
           __end_of_toto 00B4                   ??_main 0077                   ??_toto 0076  
                 _RA0PPS 0E90                   _RB0PPS 0E98                   _RB1PPS 0E99  
                 _RB2PPS 0E9A                   _RB3PPS 0E9B                   _RD0PPS 0EA8  
                 _RD1PPS 0EA9                   i1l1012 0069                   i1l1014 0094  
                 i1l1016 00F8                   _RD2PPS 0EAA                   _RD3PPS 0EAB  
                 _INTCON 000B                ??_fsm_pwm 0076  __end_of__initialization 00BA  
         __pcstackCOMMON 0074               __pmaintext 0116               __pintentry 0004  
                _PWM4DCH 061B                  _PWM4DCL 061A                  _PWM4CON 061C  
                __ptext2 00BE                  _fsm_pwm 00BE                  _time_ms 0072  
   end_of_initialization 00BA                _TRISAbits 008C      start_initialization 00B6  
            __pbssCOMMON 0070                ___latbits 0003                 ?_fsm_pwm 0074  
               _PIR1bits 0011               _ANSELAbits 018C                 int$flags 007E  
               fsm_pwm@i 0074                 intlevel1 0000  
